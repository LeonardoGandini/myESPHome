esphome:
  name: name
  friendly_name: Beautiful Name

esp8266:
  board: d1_mini

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: ""

ota:
  - platform: esphome
    password: ""

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

captive_portal:

text_sensor:
  - platform: template
    name: "Butun Uno"
    id: butununo
    icon: "mdi:gesture-tap"
    update_interval: 1s

  - platform: template
    name: "Butun Due"
    id: butundue
    icon: "mdi:gesture-tap"
    update_interval: 1s

script:
  - id: resetuno
    mode: restart
    then:
      - delay: 2s
      - lambda: 'id(butununo).publish_state(" ");'
  - id: resetdue
    mode: restart
    then:
      - delay: 2s
      - lambda: 'id(butundue).publish_state(" ");'

binary_sensor:
  
  - platform: gpio
    pin:
      number: GPIO5
      mode: INPUT_PULLUP
      inverted: True
    name: "Butun D1"
    on_multi_click:
    - timing:
        - ON for at most 1s
        - OFF for at most 1s
        - ON for at most 1s
        - OFF for at least 0.2s
      then:
        - lambda: 'id(butununo).publish_state("double_press");'
        - script.execute: resetuno
    - timing:
        - ON for 1s to 2s
        - OFF for at least 0.5s
      then:
        - lambda: 'id(butununo).publish_state("single_long");'
        - script.execute: resetuno
    - timing:
        - ON for at most 1s
        - OFF for at least 0.5s
      then:
        - lambda: 'id(butununo).publish_state("single_short");'
        - script.execute: resetuno

  - platform: gpio
    pin:
      number: GPIO14
      mode: INPUT_PULLUP
      inverted: True
    name: "Butun D5"
    on_multi_click:
    - timing:
        - ON for at most 1s
        - OFF for at most 1s
        - ON for at most 1s
        - OFF for at least 0.2s
      then:
        - lambda: 'id(butundue).publish_state("double_press");'
        - script.execute: resetdue
    - timing:
        - ON for 1s to 2s
        - OFF for at least 0.5s
      then:
        - lambda: 'id(butundue).publish_state("single_long");'
        - script.execute: resetdue
    - timing:
        - ON for at most 1s
        - OFF for at least 0.5s
      then:
        - lambda: 'id(butundue).publish_state("single_short");'
        - script.execute: resetdue
